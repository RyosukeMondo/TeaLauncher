name: Release Build

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  quality-checks:
    name: Quality Validation
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore TeaLauncher.Avalonia/TeaLauncher.Avalonia.csproj

    - name: Restore test dependencies
      run: dotnet restore TeaLauncher.Avalonia.Tests/TeaLauncher.Avalonia.Tests.csproj

    - name: Build application
      run: dotnet build TeaLauncher.Avalonia/TeaLauncher.Avalonia.csproj --configuration Release --no-restore

    - name: Build tests
      run: dotnet build TeaLauncher.Avalonia.Tests/TeaLauncher.Avalonia.Tests.csproj --configuration Release --no-restore

    - name: Run tests
      continue-on-error: false
      run: dotnet test TeaLauncher.Avalonia.Tests/TeaLauncher.Avalonia.Tests.csproj --no-build --verbosity minimal --configuration Release

    - name: Run tests with coverage
      run: dotnet test TeaLauncher.Avalonia.Tests/TeaLauncher.Avalonia.Tests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory ./coverage

    - name: Install coverage report generator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool || dotnet tool update --global dotnet-reportgenerator-globaltool

    - name: Generate coverage report
      run: |
        reportgenerator \
          -reports:./coverage/**/coverage.cobertura.xml \
          -targetdir:./coverage-report \
          -reporttypes:"Html;Cobertura"

    - name: Check coverage threshold
      continue-on-error: false
      run: bash scripts/check-coverage.sh

    - name: Check code metrics
      continue-on-error: false
      run: dotnet run --project tools/MetricsChecker/MetricsChecker.csproj -- TeaLauncher.Avalonia/TeaLauncher.Avalonia.csproj

    - name: Check code formatting
      continue-on-error: false
      run: dotnet format TeaLauncher.Avalonia/TeaLauncher.Avalonia.csproj --verify-no-changes

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    needs: quality-checks
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Extract version from tag
      id: version
      shell: bash
      run: |
        VERSION="${{ github.ref_name }}"
        VERSION="${VERSION#v}"
        # For assembly version, strip prerelease suffix (e.g., 0.0.1-test -> 0.0.1)
        ASSEMBLY_VERSION="${VERSION%%-*}"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "assembly_version=$ASSEMBLY_VERSION" >> $GITHUB_OUTPUT

    - name: Publish Windows binary
      run: |
        dotnet publish TeaLauncher.Avalonia/TeaLauncher.Avalonia.csproj `
          -c Release `
          -r win-x64 `
          --self-contained true `
          -p:PublishSingleFile=true `
          -p:AssemblyVersion=${{ steps.version.outputs.assembly_version }}.0 `
          -p:FileVersion=${{ steps.version.outputs.assembly_version }}.0

    - name: Rename executable
      shell: bash
      run: |
        cd TeaLauncher.Avalonia/bin/Release/net8.0-windows/win-x64/publish
        mv TeaLauncher.Avalonia.exe TeaLauncher-${{ steps.version.outputs.version }}-win-x64.exe

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: TeaLauncher.Avalonia/bin/Release/net8.0-windows/win-x64/publish/TeaLauncher-${{ steps.version.outputs.version }}-win-x64.exe
        retention-days: 1

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    needs: quality-checks
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Extract version from tag
      id: version
      run: |
        VERSION="${{ github.ref_name }}"
        VERSION="${VERSION#v}"
        # For assembly version, strip prerelease suffix (e.g., 0.0.1-test -> 0.0.1)
        ASSEMBLY_VERSION="${VERSION%%-*}"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "assembly_version=$ASSEMBLY_VERSION" >> $GITHUB_OUTPUT

    - name: Publish Linux binary
      run: |
        dotnet publish TeaLauncher.Avalonia/TeaLauncher.Avalonia.csproj \
          -c Release \
          -r linux-x64 \
          --self-contained true \
          -p:PublishSingleFile=true \
          -p:AssemblyVersion=${{ steps.version.outputs.assembly_version }}.0 \
          -p:FileVersion=${{ steps.version.outputs.assembly_version }}.0

    - name: Rename executable and set permissions
      run: |
        cd TeaLauncher.Avalonia/bin/Release/net8.0-windows/linux-x64/publish
        mv TeaLauncher.Avalonia TeaLauncher-${{ steps.version.outputs.version }}-linux-x64
        chmod +x TeaLauncher-${{ steps.version.outputs.version }}-linux-x64

    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: TeaLauncher.Avalonia/bin/Release/net8.0-windows/linux-x64/publish/TeaLauncher-${{ steps.version.outputs.version }}-linux-x64
        retention-days: 1

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux]
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract version from tag
      id: version
      run: |
        VERSION="${{ github.ref_name }}"
        VERSION="${VERSION#v}"
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Check if pre-release
      id: prerelease
      run: |
        if [[ "${{ github.ref_name }}" =~ -(alpha|beta|rc) ]]; then
          echo "is_prerelease=true" >> $GITHUB_OUTPUT
        else
          echo "is_prerelease=false" >> $GITHUB_OUTPUT
        fi

    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: ./artifacts

    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: linux-build
        path: ./artifacts

    - name: Create release body
      id: release_body
      run: |
        cat << 'EOF' > release_body.md
        ## Downloads

        **Windows**
        - [TeaLauncher-${{ steps.version.outputs.version }}-win-x64.exe](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/TeaLauncher-${{ steps.version.outputs.version }}-win-x64.exe)

        **Linux**
        - [TeaLauncher-${{ steps.version.outputs.version }}-linux-x64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/TeaLauncher-${{ steps.version.outputs.version }}-linux-x64)

        ## Installation Instructions

        ### Windows
        1. Download the Windows executable above
        2. Double-click to run (Windows may show a security warning - click "More info" â†’ "Run anyway")
        3. No installation required - it's a self-contained executable

        ### Linux
        1. Download the Linux executable above
        2. Make it executable: `chmod +x TeaLauncher-${{ steps.version.outputs.version }}-linux-x64`
        3. Run it: `./TeaLauncher-${{ steps.version.outputs.version }}-linux-x64`

        ## Changelog
        EOF

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: TeaLauncher v${{ steps.version.outputs.version }}
        body_path: release_body.md
        files: |
          ./artifacts/TeaLauncher-${{ steps.version.outputs.version }}-win-x64.exe
          ./artifacts/TeaLauncher-${{ steps.version.outputs.version }}-linux-x64
        prerelease: ${{ steps.prerelease.outputs.is_prerelease }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
